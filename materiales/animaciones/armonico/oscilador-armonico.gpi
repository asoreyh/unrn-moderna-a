# Quantum harmonic oscilator

# General
reset
unset key
set ytics nomirror
set y2tics
set samples 1000
set xlabel "x (m)"
#set ylabel "{/Symbol Y}(x)"
set ylabel "|{/Symbol Y}(x)|^2"
set y2label "Energía (ua)"
set format x "%.0f"
set format y "%.1f"
set format y2 "%.1f"

hbar=1.
order=8

# Properties
m=1.
w=1.
a=m*w/hbar

# base functions
f0(x)=1.
f1(x)=2.*x
f2(x)=4.*x**2-2.
f3(x)=8.*x**3-12.*x
f4(x)=16.*x**4-48.*x**2+12.
f5(x)=32.*x**5-160.*x**3+120.*x
f6(x)=64.*x**6-480.*x**4+720.*x**2-120.
f7(x)=128.*x**7-1344*x**5+3360*x**3-1680.*x
f8(x)=256.*x**8-3584.*x**6+13440.*x**4-13440.*x**2+1680.

# discriminator
h(x,n)=(n==0?f0(x):(n==1?f1(x):(n==2?f2(x):(n==3?f3(x):(n==4?f4(x):(n==5?f5(x):(n==6?f6(x):(n==7?f7(x):n>(order-1)?f8(x):1/0.))))))))

# normalization
nor(n)=(a/pi)**(1./4.)*1./sqrt(2.**n * n!)

# wave function and probability density
psi(x,n)=nor(n) * h(x,n) * exp(-a*(x**2)/2.)
prob(x,n)=psi(x,n)**2

# Quantum energy
E(n)=(n+0.5)*hbar*w
# Classical energy
Eclas(x)=0.5*m*w**2*x**2

#ti(x) = sprintf("psi%02d.png",x);
ti(x) = sprintf("prob%02d.png",x);
# plot
set xrange [-4.2:4.2]
set yrange [0:10]
set y2range [0:9]
#set label 1 at -4.,0.8 "Función de probabilidad"
#set label 2 at 0.,4.2 center "Energía cuantizada"
#set label 3 at 2.3,3 "Energía clásica"
do for [n=0:order] {
plot \
	for [i=0:n] prob(x,i)+E(i), \
	for [i=0:n] E(i) axis x1y2 lt 0, \
	Eclas(x) lt 1 lw 2
	# set out ti(n); set term png enhanced medium font "Arial, 14"; replot; set out; set term x11
	print ti(n); pause 0.1
}
